# This is a multiarch Dockerfile.  See https://docs.docker.com/desktop/multi-arch/
#
# To set up the first time:
#     docker buildx create --name multiarch --use
#
# To build:
#     docker buildx build --platform linux/amd64,linux/arm64 \
#       -f ./Dockerfile-postgresql -t zulip/zulip-postgresql:14 --push .

# Currently the PostgreSQL images do not support automatic upgrading of
# the on-disk data in volumes. So the base image can not currently be upgraded
# without users needing a manual pgdump and restore.

# https://hub.docker.com/r/groonga/pgroonga/tags

FROM ubuntu/postgres:14-22.04_beta
ARG PGROONGA_VERSION=latest
ARG POSTGRESQL_VERSION=14
ARG DEBIAN_FRONTEND=noninteractive
ARG TZ=Etc/UTC
ARG POSTGRES_HOST_AUTH_METHOD=trust


RUN apt update
RUN apt install -y libpq-dev
RUN apt install -y software-properties-common
RUN add-apt-repository -y universe
RUN add-apt-repository -y ppa:groonga/ppa
RUN apt update
RUN apt install -y postgresql-14-pgroonga
RUN apt install -y hunspell

RUN ln -sf /usr/share/hunspell/en_US.dic /usr/share/postgresql/14/tsearch_data/en_us.dict 
RUN ln -sf /usr/share/hunspell/en_US.aff /usr/share/postgresql/14/tsearch_data/en_us.affix
COPY puppet/zulip/files/postgresql/zulip_english.stop /usr/share/postgresql/14/tsearch_data/zulip_english.stop
COPY scripts/setup/create-db.sql /docker-entrypoint-initdb.d/zulip-create-db.sql
COPY scripts/setup/create-pgroonga.sql /docker-entrypoint-initdb.d/zulip-create-pgroonga.sql

# Now install the pgvector extension.
RUN apt install -y git
RUN apt install -y make
RUN apt install -y build-essential
RUN apt install -y postgresql-server-dev-14
WORKDIR /tmp
RUN git clone --branch v0.4.1 https://github.com/pgvector/pgvector.git
WORKDIR /tmp/pgvector
RUN make
RUN make install # may need sudo
WORKDIR /
COPY scripts/setup/create-pgvector.sql /docker-entrypoint-initdb.d/zulip-create-pgvector.sql
